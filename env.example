# SmartHydro Microservices - Variables de Entorno
# Copia este archivo como .env y configura tus valores

# =============================================================================
# CLUSTERS EXTERNOS - BASE DE DATOS
# =============================================================================
# PostgreSQL Cluster (Externo)
POSTGRES_HOST=your-postgres-cluster-host.com
POSTGRES_PORT=5432
POSTGRES_DB=smarthydro_business
POSTGRES_USER=smarthydro
POSTGRES_PASSWORD=your_secure_postgres_password_here
POSTGRES_SSL_MODE=require
POSTGRES_SSL_CERT=path/to/ssl/cert.pem
POSTGRES_SSL_KEY=path/to/ssl/key.pem
POSTGRES_SSL_CA=path/to/ssl/ca.pem

# MongoDB Cluster (Externo)
MONGO_HOST=your-mongo-cluster-host.com
MONGO_PORT=27017
MONGO_DB=smarthydro_measurements
MONGO_USER=smarthydro
MONGO_PASSWORD=your_secure_mongo_password_here
MONGO_SSL=true
MONGO_SSL_CERT=path/to/ssl/cert.pem
MONGO_SSL_KEY=path/to/ssl/key.pem
MONGO_SSL_CA=path/to/ssl/ca.pem

# URLs completas para clusters externos
DATABASE_URL=postgresql://smarthydro:your_secure_postgres_password_here@your-postgres-cluster-host.com:5432/smarthydro_business?sslmode=require
MONGODB_URL=mongodb://smarthydro:your_secure_mongo_password_here@your-mongo-cluster-host.com:27017/smarthydro_measurements?ssl=true

# Redis (Local o Cluster)
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=your_secure_redis_password_here
REDIS_URL=redis://:your_secure_redis_password_here@redis:6379

# =============================================================================
# KAFKA CONFIGURACIÓN
# =============================================================================
KAFKA_BROKERS=kafka:29092
KAFKA_TOPIC_MEASUREMENTS=measurements
KAFKA_TOPIC_NOTIFICATIONS=notifications
KAFKA_TOPIC_DGA_COMPLIANCE=dga_compliance
KAFKA_TOPIC_ANALYTICS=analytics

# =============================================================================
# API KEYS - PROVEEDORES DE TELEMETRÍA
# =============================================================================
# Twin Data - https://www.twindata.com/
TWIN_API_KEY=your_twin_api_key_here

# Nettra (The Things Network) - https://www.thethingsnetwork.org/
NETTRA_API_KEY=your_nettra_api_key_here

# Novus (Tago.io) - https://tago.io/
NOVUS_API_KEY=your_novus_api_key_here

# =============================================================================
# MONITORING
# =============================================================================
GRAFANA_PASSWORD=your_secure_grafana_password_here

# =============================================================================
# JWT CONFIGURACIÓN
# =============================================================================
JWT_SECRET_KEY=your_super_secret_jwt_key_here_make_it_long_and_random
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# =============================================================================
# EXTERNAL APIS
# =============================================================================
# DGA - Dirección General de Aguas
DGA_API_URL=https://api.dga.cl
DGA_API_KEY=your_dga_api_key_here

# =============================================================================
# LOGGING
# =============================================================================
LOG_LEVEL=INFO
ENVIRONMENT=development

# =============================================================================
# PERFORMANCE
# =============================================================================
# Número de workers por servicio
TELEMETRY_WORKERS=4
DATA_PROCESSOR_WORKERS=4
BUSINESS_API_WORKERS=4
ANALYTICS_WORKERS=2

# Timeouts en segundos (Aumentados para clusters externos)
REQUEST_TIMEOUT=60
DATABASE_TIMEOUT=30
REDIS_TIMEOUT=10
KAFKA_TIMEOUT=15

# Configuración de pools de conexiones para clusters
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# =============================================================================
# SECURITY
# =============================================================================
# CORS - Dominios permitidos
ALLOWED_HOSTS=localhost,127.0.0.1,api.smarthydro.com,telemetry.smarthydro.com

# Rate limiting
RATE_LIMIT_PER_MINUTE=100
RATE_LIMIT_PER_HOUR=1000

# =============================================================================
# EMAIL CONFIGURACIÓN (Para notificaciones)
# =============================================================================
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_HOST_USER=your_email@gmail.com
EMAIL_HOST_PASSWORD=your_email_password_here

# =============================================================================
# BACKUP CONFIGURACIÓN
# =============================================================================
BACKUP_ENABLED=true
BACKUP_RETENTION_DAYS=30
BACKUP_SCHEDULE=0 2 * * *  # Diario a las 2 AM

# =============================================================================
# ALERTAS
# =============================================================================
# Slack Webhook para alertas
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Email para alertas críticas
ALERT_EMAIL=alerts@smarthydro.com

# =============================================================================
# DESARROLLO LOCAL
# =============================================================================
# Solo para desarrollo - NO usar en producción
DEBUG=True
DJANGO_SECRET_KEY=your_django_secret_key_for_development_only

# =============================================================================
# KUBERNETES (Para producción)
# =============================================================================
# Namespace de Kubernetes
K8S_NAMESPACE=smarthydro

# Configuración de recursos
K8S_TELEMETRY_CPU_LIMIT=2
K8S_TELEMETRY_MEMORY_LIMIT=4Gi
K8S_BUSINESS_CPU_LIMIT=1
K8S_BUSINESS_MEMORY_LIMIT=2Gi

# =============================================================================
# MONITORING AVANZADO
# =============================================================================
# Prometheus
PROMETHEUS_RETENTION_TIME=200h
PROMETHEUS_SCRAPE_INTERVAL=15s

# Grafana
GRAFANA_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

# =============================================================================
# CLUSTERS EXTERNOS - CONFIGURACIÓN AVANZADA
# =============================================================================
# Configuración de retry para clusters externos
DATABASE_RETRY_ATTEMPTS=3
DATABASE_RETRY_DELAY=5
DATABASE_CONNECTION_TIMEOUT=30

# Configuración de SSL para clusters
SSL_VERIFY=true
SSL_CERT_PATH=/etc/ssl/certs
SSL_KEY_PATH=/etc/ssl/private

# Configuración de failover para clusters
DATABASE_FAILOVER_ENABLED=true
DATABASE_PRIMARY_HOST=your-postgres-primary.com
DATABASE_REPLICA_HOSTS=your-postgres-replica1.com,your-postgres-replica2.com

# =============================================================================
# NOTAS IMPORTANTES - CLUSTERS EXTERNOS
# =============================================================================
# 1. Cambia TODAS las contraseñas por defecto
# 2. Usa contraseñas fuertes (mínimo 16 caracteres)
# 3. No compartas este archivo en repositorios públicos
# 4. En producción, usa un gestor de secretos (HashiCorp Vault, AWS Secrets Manager, etc.)
# 5. Rota las API keys regularmente
# 6. Monitorea el uso de recursos
# 7. Configura alertas para problemas críticos
# 8. IMPORTANTE: Configura correctamente las URLs de los clusters externos
# 9. Verifica la conectividad SSL con los clusters
# 10. Configura timeouts apropiados para latencia de red
# 11. Implementa retry logic para fallos de conectividad
# 12. Monitorea la salud de los clusters externos 