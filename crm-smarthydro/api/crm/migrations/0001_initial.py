# Generated by Django 3.0.5 on 2020-07-19 15:57

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('email', models.EmailField(error_messages={'unique': 'El usuario ya existe.'}, max_length=254, unique=True, verbose_name='email address')),
                ('is_verified', models.BooleanField(default=True, help_text='Se establece en verdadero cuando el usuario ha verificado su dirección de correo electrónico')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('type_client', models.CharField(blank=True, max_length=40, null=True)),
                ('name', models.CharField(max_length=20)),
                ('rut', models.CharField(blank=True, max_length=10, null=True)),
                ('region', models.CharField(blank=True, max_length=120, null=True)),
                ('province', models.CharField(blank=True, max_length=20, null=True)),
                ('commune', models.CharField(blank=True, max_length=20, null=True)),
                ('address_exact', models.CharField(blank=True, max_length=60, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message='El número de telefono debe ingresarse en el formato: +9999999. Se permiten hasta 15 dígitos.', regex='\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(blank=True, error_messages={'unique': 'Un cliente(empresa) con ese email ya existe.'}, max_length=254, null=True, unique=True, verbose_name='email')),
                ('administered', models.TextField(blank=True, choices=[('Comite', 'Comite'), ('Cooperativa', 'Cooperativa')])),
                ('number_starts', models.IntegerField(blank=True, null=True)),
                ('date_jurisdiction', models.DateField(blank=True, null=True)),
                ('amount_regularized', models.IntegerField(blank=True, null=True)),
                ('flow_rates', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, max_length=40, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is Active')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('description', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('charge', models.TextField(blank=True, choices=[('Presidente', 'Presidente'), ('Administrador', 'Administrador'), ('Secretario', 'Secretario'), ('Secretaria', 'Secretaria'), ('Tesorero', 'Tesorero'), ('Operador', 'Operador')], max_length=30, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, validators=[django.core.validators.RegexValidator(message='El número de telefono debe ingresarse en el formato: +9999999. Se permiten hasta 15 dígitos.', regex='\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(error_messages={'unique': 'Un empelado con ese email ya existe.'}, max_length=254, unique=True, verbose_name='email')),
                ('is_active', models.BooleanField(default=True, verbose_name='is Active')),
                ('enterprise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='crm.Client')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('date', models.DateTimeField()),
                ('note', models.TextField(blank=True, max_length=50)),
                ('is_warning', models.BooleanField(default=False, verbose_name='Warning')),
                ('is_priority', models.BooleanField(default=False, verbose_name='Priority')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Complete')),
                ('date_complete', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_action', to='crm.Client')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employee_action', to='crm.Employee')),
                ('type_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_action', to='crm.TypeAction')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
    ]
