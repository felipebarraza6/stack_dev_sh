# Generated by Django 4.2.4 on 2024-01-26 20:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('email', models.EmailField(error_messages={'unique': 'El usuario ya existe.'}, max_length=254, unique=True, verbose_name='email address')),
                ('txt_password', models.CharField(blank=True, default='pozos.2023', max_length=1200, null=True)),
                ('is_verified', models.BooleanField(default=True, help_text='Se establece en verdadero cuando el usuario ha verificado su dirección de correo electrónico')),
                ('is_admin_view', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProfileClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('module_1', models.BooleanField(default=True)),
                ('module_2', models.BooleanField(default=False)),
                ('module_3', models.BooleanField(default=False)),
                ('module_4', models.BooleanField(default=False)),
                ('module_5', models.BooleanField(default=False)),
                ('module_6', models.BooleanField(default=False)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('token_service', models.CharField(blank=True, max_length=400, null=True)),
                ('code_dga_site', models.CharField(blank=True, max_length=1200, null=True)),
                ('type_dga', models.CharField(blank=True, choices=[('SUB', 'subterraneo'), ('SUP', 'superficial')], default='SUB', max_length=300, null=True)),
                ('flow_granted_dga', models.CharField(blank=True, max_length=1200, null=True)),
                ('shac', models.CharField(blank=True, max_length=1200, null=True)),
                ('d1', models.CharField(blank=True, max_length=100, null=True)),
                ('d2', models.CharField(blank=True, max_length=100, null=True)),
                ('d3', models.CharField(blank=True, max_length=100, null=True)),
                ('d4', models.CharField(blank=True, max_length=100, null=True)),
                ('d5', models.CharField(blank=True, max_length=100, null=True)),
                ('d6', models.CharField(blank=True, max_length=100, null=True)),
                ('scale', models.IntegerField(blank=True, null=True)),
                ('qr_dga', models.ImageField(blank=True, null=True, upload_to='')),
                ('standard', models.CharField(blank=True, choices=[('MAYOR', 'mayor'), ('MEDIO', 'medio'), ('MENOR', 'menor'), ('CAUDALES_MUY_PEQUENOS', 'caudales_muy_pequenos')], max_length=300, null=True)),
                ('is_dga', models.BooleanField(default=False)),
                ('is_apr', models.BooleanField(default=False)),
                ('is_monitoring', models.BooleanField(blank=True, null=True)),
                ('is_send_dga', models.BooleanField(blank=True, null=True)),
                ('is_prom_flow', models.BooleanField(default=False)),
                ('date_monitoring', models.DateField(blank=True, null=True)),
                ('date_reporting_dga', models.DateField(blank=True, null=True)),
                ('date_delivery_act', models.DateField(blank=True, null=True)),
                ('is_thethings', models.BooleanField(default=False)),
                ('rut_report_dga', models.CharField(default='17352192-8', max_length=1400)),
                ('password_dga_software', models.CharField(default='ZSQgCiDg7y', max_length=1400)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Well',
            },
        ),
        migrations.CreateModel(
            name='VariableClient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('str_variable', models.CharField(max_length=400)),
                ('token_service', models.CharField(blank=True, max_length=400, null=True)),
                ('is_other_token', models.BooleanField(default=False)),
                ('is_other_url', models.BooleanField(blank=True, default=False, null=True)),
                ('service', models.CharField(blank=True, choices=[('NOVUS', 'novus'), ('THETHINGS', 'thethings')], max_length=1200, null=True)),
                ('type_variable', models.CharField(choices=[('NIVEL', 'nivel'), ('CAUDAL', 'caudal'), ('ACUMULADO', 'acumulado')], max_length=1200)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variable_profile', to='crm.profileclient')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterPersons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('name', models.CharField(blank=True, max_length=300, null=True)),
                ('email', models.CharField(blank=True, max_length=300, null=True)),
                ('phone', models.CharField(blank=True, max_length=300, null=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.profileclient')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InteractionDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('date_time_medition', models.DateTimeField(blank=True, max_length=800, null=True)),
                ('flow', models.CharField(blank=True, max_length=400, null=True)),
                ('total', models.CharField(blank=True, max_length=400, null=True)),
                ('nivel', models.CharField(blank=True, max_length=400, null=True)),
                ('is_send_dga', models.BooleanField(default=False)),
                ('soap_return', models.TextField(blank=True, max_length=3000, null=True)),
                ('profile_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.profileclient')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DataHistoryFact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('month', models.CharField(blank=True, max_length=300, null=True)),
                ('production', models.IntegerField(blank=True, null=True)),
                ('billing', models.IntegerField(blank=True, null=True)),
                ('constant_a', models.IntegerField(blank=True, null=True)),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='crm.profileclient')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
    ]
